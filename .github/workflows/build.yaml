name: Build & Push Edge Image (GAR)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

permissions:
  contents: read

env:
  PROJECT_ID: consus-ems            # <-- your project id
  REGION: europe-west2              # <-- MUST match your repo's region
  REPO: consus-edge                 # <-- your Artifact Registry repo name
  IMAGE: edge-image                 # <-- your image name

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (uses your JSON secret)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install gcloud & configure Docker for GAR
        uses: google-github-actions/setup-gcloud@v2
      - run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      # Sanity checks so we know where it fails
      - name: List Artifact Registry repos (by region)
        run: gcloud artifacts repositories list --location=${{ env.REGION }} --project=${{ env.PROJECT_ID }}

      - name: Derive image base
        id: img
        run: echo "base=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}" >> $GITHUB_OUTPUT

      - name: Show target image path
        run: echo "Pushing to: ${{ steps.img.outputs.base }}"

      - name: Set up QEMU & Buildx (multi-arch)
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.img.outputs.base }}
          tags: |
            type=raw,value=main,enable={{is_default_branch}}
            type=sha,enable=true,prefix=sha-
            type=ref,event=tag

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
